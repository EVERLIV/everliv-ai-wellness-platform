
import React from "react";
import { Heart, FileText, Utensils, Activity, Brain, BookOpen } from "lucide-react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Link } from "react-router-dom";
import { useSubscription } from "@/contexts/SubscriptionContext";
import { FEATURES } from "@/constants/subscription-features";

const DashboardQuickActions = () => {
  const { canUseFeature } = useSubscription();

  const actions = [
    {
      title: "–ü—Ä–æ—Ñ–∏–ª—å –∑–¥–æ—Ä–æ–≤—å—è",
      description: "–°–æ–∑–¥–∞–π—Ç–µ –ø–æ–ª–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å –∑–¥–æ—Ä–æ–≤—å—è —Å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏, –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–π –∏—Å—Ç–æ—Ä–∏–µ–π –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –∞–Ω–∞–ª–∏–∑–æ–≤",
      icon: Heart,
      href: "/health-profile",
      color: "text-red-500",
      bgColor: "bg-red-50",
      gradient: "from-red-50 to-red-100",
      available: true,
      badge: { text: "–û—Å–Ω–æ–≤–∞", variant: "secondary" as const },
      features: ["–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è –∏—Å—Ç–æ—Ä–∏—è", "–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏", "–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è"]
    },
    {
      title: "–í–∞—à–∏ –ê–Ω–∞–ª–∏–∑—ã",
      description: "–ó–∞–≥—Ä—É–∂–∞–π—Ç–µ –∏ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã—Ö –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π —Å –ø–æ–º–æ—â—å—é –ò–ò –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π",
      icon: FileText,
      href: "/lab-analyses",
      color: "text-blue-500",
      bgColor: "bg-blue-50",
      gradient: "from-blue-50 to-blue-100",
      available: canUseFeature(FEATURES.BLOOD_ANALYSIS),
      badge: { text: "–ò–ò-–∞–Ω–∞–ª–∏–∑", variant: "default" as const },
      features: ["–£–º–Ω—ã–π –∞–Ω–∞–ª–∏–∑", "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏", "–¢—Ä–µ–∫–∏–Ω–≥ –¥–∏–Ω–∞–º–∏–∫–∏"]
    },
    {
      title: "–î–Ω–µ–≤–Ω–∏–∫ –ø–∏—Ç–∞–Ω–∏—è",
      description: "–í–µ–¥–∏—Ç–µ –¥–µ—Ç–∞–ª—å–Ω—ã–π —É—á–µ—Ç –ø–∏—Ç–∞–Ω–∏—è —Å –∞–Ω–∞–ª–∏–∑–æ–º –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç–∏, –º–∞–∫—Ä–æ–Ω—É—Ç—Ä–∏–µ–Ω—Ç–æ–≤ –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∏–µ—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏",
      icon: Utensils,
      href: "/nutrition-diary",
      color: "text-green-500",
      bgColor: "bg-green-50",
      gradient: "from-green-50 to-green-100",
      available: canUseFeature(FEATURES.NUTRITION_DIARY),
      badge: { text: "Pro", variant: "secondary" as const },
      features: ["–ü–æ–¥—Å—á–µ—Ç –∫–∞–ª–æ—Ä–∏–π", "–ê–Ω–∞–ª–∏–∑ –ë–ñ–£", "–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Å–æ–≤–µ—Ç—ã"]
    },
    {
      title: "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è",
      description: "–ü–æ–ª—É—á–∞–π—Ç–µ –∫–æ–º–ø–ª–µ–∫—Å–Ω—É—é –∞–Ω–∞–ª–∏—Ç–∏–∫—É –∑–¥–æ—Ä–æ–≤—å—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—Å–µ—Ö –≤–∞—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö —Å –ø—Ä–æ–≥–Ω–æ–∑–∞–º–∏ –∏ –¥–µ—Ç–∞–ª—å–Ω—ã–º–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏",
      icon: Activity,
      href: "/analytics",
      color: "text-purple-500",
      bgColor: "bg-purple-50",
      gradient: "from-purple-50 to-purple-100",
      available: canUseFeature(FEATURES.ANALYTICS),
      badge: { text: "–ü—Ä–µ–º–∏—É–º", variant: "default" as const },
      features: ["–ì–ª—É–±–æ–∫–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞", "–ü—Ä–æ–≥–Ω–æ–∑—ã", "–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω"]
    },
    {
      title: "–ò–ò-–¥–æ–∫—Ç–æ—Ä",
      description: "–ö–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É–π—Ç–µ—Å—å —Å –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–º –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–æ–º –ø–æ –≤–æ–ø—Ä–æ—Å–∞–º –∑–¥–æ—Ä–æ–≤—å—è, –ø–æ–ª—É—á–∞–π—Ç–µ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ 24/7",
      icon: Brain,
      href: "/ai-doctor",
      color: "text-indigo-500",
      bgColor: "bg-indigo-50",
      gradient: "from-indigo-50 to-indigo-100",
      available: canUseFeature(FEATURES.CHAT_MESSAGES),
      badge: { text: "–ò–ò", variant: "default" as const },
      features: ["24/7 –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å", "–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è –±–∞–∑–∞", "–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã"]
    },
    {
      title: "–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π",
      description: "–ò–∑—É—á–∞–π—Ç–µ –º–µ–¥–∏—Ü–∏–Ω—Å–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, —Å—Ç–∞—Ç—å–∏ —ç–∫—Å–ø–µ—Ä—Ç–æ–≤, –Ω–∞—É—á–Ω—ã–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –∏ —Ä–∞—Å—à–∏—Ä—è–π—Ç–µ –∑–Ω–∞–Ω–∏—è –æ –∑–¥–æ—Ä–æ–≤—å–µ",
      icon: BookOpen,
      href: "/medical-knowledge",
      color: "text-orange-500",
      bgColor: "bg-orange-50",
      gradient: "from-orange-50 to-orange-100",
      available: true,
      badge: { text: "–û–±—É—á–µ–Ω–∏–µ", variant: "secondary" as const },
      features: ["–≠–∫—Å–ø–µ—Ä—Ç–Ω—ã–µ —Å—Ç–∞—Ç—å–∏", "–ù–∞—É—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ", "–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç"]
    }
  ];

  return (
    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
      {actions.map((action, index) => (
        <Card key={index} className={`group relative overflow-hidden border border-gray-200 hover:border-gray-300 hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1 bg-gradient-to-br ${action.gradient}`}>
          <div className="absolute top-0 right-0 p-3">
            <Badge variant={action.badge.variant} className="text-xs font-medium shadow-sm">
              {action.badge.text}
            </Badge>
          </div>
          
          <CardHeader className="pb-4 pt-6">
            <div className={`w-14 h-14 ${action.bgColor} rounded-xl flex items-center justify-center mb-4 group-hover:scale-110 transition-transform duration-300 shadow-sm border border-white/50`}>
              <action.icon className={`h-7 w-7 ${action.color}`} />
            </div>
            <CardTitle className="text-xl font-semibold text-gray-900 leading-tight">
              {action.title}
            </CardTitle>
          </CardHeader>
          
          <CardContent className="pt-0 space-y-4">
            <p className="text-sm text-gray-600 leading-relaxed line-clamp-3">
              {action.description}
            </p>
            
            <div className="space-y-2">
              <div className="text-xs font-medium text-gray-500 uppercase tracking-wide">
                –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
              </div>
              <div className="flex flex-wrap gap-1">
                {action.features.map((feature, idx) => (
                  <span 
                    key={idx} 
                    className="text-xs px-2 py-1 bg-white/60 text-gray-700 rounded-full border border-gray-200/50"
                  >
                    {feature}
                  </span>
                ))}
              </div>
            </div>
            
            <div className="pt-2">
              {action.available ? (
                <Link to={action.href}>
                  <Button className="w-full font-medium shadow-sm hover:shadow-md transition-shadow duration-200">
                    –ü–µ—Ä–µ–π—Ç–∏ –∫ —Ñ—É–Ω–∫—Ü–∏–∏
                  </Button>
                </Link>
              ) : (
                <div className="space-y-3">
                  <div className="bg-amber-50 border border-amber-200 rounded-lg p-3">
                    <p className="text-xs text-amber-700 font-medium text-center">
                      üîí –¢—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–¥–ø–∏—Å–∫–∞ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞
                    </p>
                  </div>
                  <Link to="/dashboard/subscription">
                    <Button 
                      variant="outline" 
                      className="w-full border-everliv-600 text-everliv-600 hover:bg-everliv-50 font-medium"
                    >
                      –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫—É
                    </Button>
                  </Link>
                </div>
              )}
            </div>
          </CardContent>
        </Card>
      ))}
    </div>
  );
};

export default DashboardQuickActions;
