
import React, { useState, useEffect } from "react";
import { useSmartAuth } from "@/hooks/useSmartAuth";
import Header from "@/components/Header";
import PersonalizedHealthTips from "@/components/dashboard/PersonalizedHealthTips";
import MinimalFooter from "@/components/MinimalFooter";
import DashboardLayout from "@/components/dashboard/DashboardLayout";
import DashboardLeftColumn from "@/components/dashboard/DashboardLeftColumn";
import DashboardRightColumn from "@/components/dashboard/DashboardRightColumn";
import { useCachedAnalytics } from "@/hooks/useCachedAnalytics";
import { useRecommendationsInvalidation } from "@/hooks/useRecommendationsInvalidation";
import { useIsMobile } from "@/hooks/use-mobile";
import { isDevelopmentMode } from "@/utils/devMode";
import { useProfile } from "@/hooks/useProfile";

const Dashboard = () => {
  const { user, isLoading } = useSmartAuth();
  const { analytics } = useCachedAnalytics();
  const { profileData } = useProfile();
  const [isLoaded, setIsLoaded] = useState(false);
  const isMobile = useIsMobile();
  const isDevMode = isDevelopmentMode();
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∏–Ω–≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∫—ç—à–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
  // useRecommendationsInvalidation(); // –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω–æ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏

  console.log('üîß Dashboard: Auth state check', {
    user: user?.email,
    isLoading,
    isDevMode,
    hasUser: !!user,
    isMobile,
    analyticsHealthScore: analytics?.healthScore
  });

  useEffect(() => {
    setIsLoaded(true);
  }, []);

  // –£–ø—Ä–æ—â–∞–µ–º –ª–æ–≥–∏–∫—É –∑–∞–≥—Ä—É–∑–∫–∏ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º Dashboard –¥–∞–∂–µ –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –µ—â–µ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è
  if (!isLoaded) {
    return (
      <div className="min-h-screen flex flex-col bg-gradient-to-br from-slate-50 via-blue-50/30 to-white">
        <div className="flex-grow flex items-center justify-center">
          <div className="flex flex-col items-center space-y-4">
            <div className="animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-primary shadow-lg"></div>
            <p className="text-gray-500 font-medium text-adaptive-base mobile-text-wrap text-center">
              –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...
            </p>
          </div>
        </div>
      </div>
    );
  }

  // –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –ü–†–ê–í–ò–õ–¨–ù–´–ú –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º: –Ω–∏–∫–Ω–µ–π–º –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è -> –∏–º—è –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è -> –∏–º—è –∏–∑ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö
  const userName = profileData?.nickname || profileData?.first_name || user?.user_metadata?.first_name || user?.user_metadata?.full_name || "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å";
  
  console.log('üîß Dashboard: User name data –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –õ–û–ì–ò–ö–ê:', {
    profileNickname: profileData?.nickname,
    profileFirstName: profileData?.first_name,
    userMetadataFirstName: user?.user_metadata?.first_name,
    userMetadataFullName: user?.user_metadata?.full_name,
    finalUserName: userName,
    hasProfileData: !!profileData,
    profileDataNickname: profileData?.nickname,
    userEmail: user?.email,
    isLoadingProfile: isLoading,
    –ü–†–ò–û–†–ò–¢–ï–¢: 'profileData.nickname –ü–ï–†–í–´–ô!'
  });
  
  console.log('üö® –í–ê–ñ–ù–û: –§–∏–Ω–∞–ª—å–Ω–æ–µ –∏–º—è –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –≤ SimpleWelcomeCard:', userName);
  
  // –í–ê–ñ–ù–û: –ù–ï –ø–æ–∫–∞–∑—ã–≤–∞–µ–º fallback –∑–Ω–∞—á–µ–Ω–∏—è, –∂–¥–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  // –≠—Ç–æ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –º–µ—Ä—Ü–∞–Ω–∏–µ —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
  const healthScore = analytics?.healthScore; // undefined –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –µ—â–µ –Ω–µ—Ç
  const biologicalAge = analytics?.biologicalAge || 42; // Fallback —Ç–æ–ª—å–∫–æ –¥–ª—è –±–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞

  console.log('üîß Dashboard: Rendering with data:', {
    userName,
    healthScore: analytics?.healthScore,
    hasAnalytics: !!analytics,
    isAnalyticsLoading: isLoading // –¥–æ–±–∞–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
  });

  return (
    <div className={`min-h-screen flex flex-col bg-gray-50 ${isMobile ? 'mobile-optimized' : ''}`}>
      <Header />
      <div className="pt-16 flex-1">
        <DashboardLayout
          leftColumn={
            <DashboardLeftColumn userName={userName} />
          }
          rightColumn={
            <DashboardRightColumn 
              healthScore={healthScore} // –ø–µ—Ä–µ–¥–∞–µ–º undefined –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç
              biologicalAge={biologicalAge} 
              isLoadingAnalytics={!analytics && isLoading} // —É–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è
            />
          }
        />
      </div>
      
      {/* –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏ –ø–æ –∑–¥–æ—Ä–æ–≤—å—é */}
      {/* <PersonalizedHealthTips /> */}
      
      <MinimalFooter />
    </div>
  );
};

export default Dashboard;
