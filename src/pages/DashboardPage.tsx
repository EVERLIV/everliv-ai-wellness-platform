import React from 'react';
import { AppLayout } from "@/components/layout/AppLayout";
import { useAuth } from '@/contexts/AuthContext';
import { useProfile } from '@/hooks/useProfile';
import { HealthLayout, HealthHeader, HealthSection } from '@/design-system/components/HealthLayout';
import { MetricCard } from '@/design-system/components/HealthMetrics';
import { Heart, Activity, TrendingUp, Calendar, Target } from 'lucide-react';
import { useHealthProfile } from '@/hooks/useHealthProfile';
import { useCachedAnalytics } from '@/hooks/useCachedAnalytics';
import { useIsMobile } from '@/hooks/use-mobile';
import DashboardQuickActionsGrid from '@/components/dashboard/DashboardQuickActionsGrid';
import DashboardChatsList from '@/components/dashboard/DashboardChatsList';
import MyGoalsSection from '@/components/dashboard/MyGoalsSection';
import PriorityMetricsSection from '@/components/dashboard/PriorityMetricsSection';

const DashboardPage = () => {
  const { user } = useAuth();
  const { profileData } = useProfile();
  const { healthProfile } = useHealthProfile();
  const { analytics, isLoading: analyticsLoading } = useCachedAnalytics();
  const isMobile = useIsMobile();

  // –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –ª–æ–≥–∏–∫–∞: –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –Ω–∏–∫–Ω–µ–π–º—É –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è
  const userName = profileData?.nickname || profileData?.first_name || user?.user_metadata?.first_name || user?.user_metadata?.full_name || "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å";

  console.log('üîß DashboardPage: –ü–†–ê–í–ò–õ–¨–ù–ê–Ø –ª–æ–≥–∏–∫–∞ –∏–º–µ–Ω–∏:', {
    profileNickname: profileData?.nickname,
    profileFirstName: profileData?.first_name,
    userMetadataFirstName: user?.user_metadata?.first_name,
    userMetadataFullName: user?.user_metadata?.full_name,
    finalUserName: userName,
    hasProfileData: !!profileData
  });

  // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
  const currentHealthScore = analytics?.healthScore;
  
  // –†–∞—Å—á–µ—Ç –±–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª—è –∑–¥–æ—Ä–æ–≤—å—è
  const calculateBiologicalAge = () => {
    if (!healthProfile?.age) return 35;
    
    let bioAge = healthProfile.age;
    
    // –§–∞–∫—Ç–æ—Ä—ã —Å—Ç–∞—Ä–µ–Ω–∏—è
    if (healthProfile.stressLevel && healthProfile.stressLevel > 7) bioAge += 3;
    if (healthProfile.sleepHours && healthProfile.sleepHours < 6) bioAge += 2;
    if (healthProfile.exerciseFrequency && healthProfile.exerciseFrequency < 1) bioAge += 5;
    
    // –§–∞–∫—Ç–æ—Ä—ã –æ–º–æ–ª–æ–∂–µ–Ω–∏—è
    if (healthProfile.exerciseFrequency && healthProfile.exerciseFrequency >= 4) bioAge -= 2;
    if (healthProfile.sleepHours && healthProfile.sleepHours >= 7 && healthProfile.sleepHours <= 9) bioAge -= 1;
    if (healthProfile.stressLevel && healthProfile.stressLevel <= 4) bioAge -= 2;
    
    return Math.max(18, Math.min(bioAge, healthProfile.age + 10));
  };

  const currentBiologicalAge = calculateBiologicalAge();

  const getScoreColor = (score: number) => {
    if (score >= 80) return 'text-green-600';
    if (score >= 60) return 'text-yellow-600';
    return 'text-red-600';
  };

  const getScoreGradient = (score: number) => {
    if (score >= 80) return '[&>div]:bg-green-500';
    if (score >= 60) return '[&>div]:bg-yellow-500';
    return '[&>div]:bg-red-500';
  };

  return (
    <AppLayout>
      <HealthLayout variant="gradient" padding="lg">
        {/* EVA Health Header */}
        <HealthHeader
          title={`–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${userName}!`}
          subtitle="–£–ø—Ä–∞–≤–ª—è–π—Ç–µ —Å–≤–æ–∏–º –∑–¥–æ—Ä–æ–≤—å–µ–º —Å –ø–æ–º–æ—â—å—é –ò–ò-–ø–ª–∞—Ç—Ñ–æ—Ä–º—ã"
          avatar={
            <div className="w-12 h-12 rounded-2xl bg-gradient-to-br from-eva-primary to-eva-accent flex items-center justify-center">
              <Heart className="w-6 h-6 text-white" />
            </div>
          }
        />

        {isMobile ? (
          // –ú–æ–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å EVA layout
          <div className="space-y-6">
            {/* 1. –ú–æ–∏ —Ü–µ–ª–∏ */}
            <MyGoalsSection />

            {/* 2. –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
            <DashboardQuickActionsGrid />

            {/* 3. –ò–ò-–ø—Ä–µ–¥–∏–∫—Ç—ã —Ä–∏—Å–∫–æ–≤ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π –∏ –¢–æ–ø-5 –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –±–∏–æ–º–∞—Ä–∫–µ—Ä–æ–≤ */}
            <PriorityMetricsSection />

            {/* 4. –ò—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–æ–≤ —Å –ò–ò */}
            <DashboardChatsList />
          </div>
        ) : (
          // –î–µ—Å–∫—Ç–æ–ø–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å EVA layout
          <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
            {/* –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
            <div className="lg:col-span-2 space-y-8">
              <DashboardQuickActionsGrid />

              {/* –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ */}
              <PriorityMetricsSection />
            </div>

            {/* –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - –î–∞–Ω–Ω—ã–µ –∑–¥–æ—Ä–æ–≤—å—è */}
            <div className="space-y-8">
              {/* –ú–æ–∏ —Ü–µ–ª–∏ */}
              <MyGoalsSection />

              {/* –ò—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–æ–≤ —Å –ò–ò */}
              <DashboardChatsList />
            </div>
          </div>
        )}
      </HealthLayout>
    </AppLayout>
  );
};

export default DashboardPage;