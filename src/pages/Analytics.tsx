
import React, { useState } from 'react';
import { AppLayout } from '@/components/layout/AppLayout';
import AnalyticsScoreCard from '@/components/analytics/AnalyticsScoreCard';
import AnalyticsBiomarkersCard from '@/components/analytics/AnalyticsBiomarkersCard';
import AnalyticsDisplayCard from '@/components/analytics/AnalyticsDisplayCard';
import AnalyticsValueDisplay from '@/components/analytics/AnalyticsValueDisplay';
import PersonalAIConsultant from '@/components/analytics/PersonalAIConsultant';
import DashboardLayout from '@/components/dashboard/DashboardLayout';
import { useCachedAnalytics } from '@/hooks/useCachedAnalytics';
import { useHealthProfile } from '@/hooks/useHealthProfile';
import { useRecommendationsInvalidation } from '@/hooks/useRecommendationsInvalidation';
import { Button } from '@/components/ui/button';
import { RefreshCw, AlertTriangle, User, TestTube, Calendar, Target, Brain } from 'lucide-react';
import { Link } from 'react-router-dom';
import { useIsMobile } from '@/hooks/use-mobile';

const Analytics = () => {
  const { 
    analytics, 
    isLoading, 
    isGenerating, 
    hasHealthProfile, 
    hasAnalyses, 
    generateAnalytics 
  } = useCachedAnalytics();
  
  const { healthProfile } = useHealthProfile();
  const isMobile = useIsMobile();
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∏–Ω–≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∫—ç—à–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
  // useRecommendationsInvalidation(); // –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω–æ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏

  // –ü–µ—Ä–µ–≤–æ–¥ —Ü–µ–ª–µ–π –Ω–∞ —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫
  const translateGoal = (goal: string): string => {
    const translations: Record<string, string> = {
      'biological_age': '–ë–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –≤–æ–∑—Ä–∞—Å—Ç',
      'cardiovascular': '–°–µ—Ä–¥–µ—á–Ω–æ-—Å–æ—Å—É–¥–∏—Å—Ç–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ',
      'cognitive': '–ö–æ–≥–Ω–∏—Ç–∏–≤–Ω–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ',
      'musculoskeletal': '–û–ø–æ—Ä–Ω–æ-–¥–≤–∏–≥–∞—Ç–µ–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞',
      'metabolism': '–ú–µ—Ç–∞–±–æ–ª–∏–∑–º',
      'muscle_gain': '–ù–∞–±–æ—Ä –º—ã—à–µ—á–Ω–æ–π –º–∞—Å—Å—ã',
      'weight_loss': '–°–Ω–∏–∂–µ–Ω–∏–µ –≤–µ—Å–∞',
      'energy_boost': '–ü–æ–≤—ã—à–µ–Ω–∏–µ —ç–Ω–µ—Ä–≥–∏–∏',
      'sleep_improvement': '–£–ª—É—á—à–µ–Ω–∏–µ —Å–Ω–∞',
      'stress_reduction': '–°–Ω–∏–∂–µ–Ω–∏–µ —Å—Ç—Ä–µ—Å—Å–∞',
      'immunity_boost': '–£–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –∏–º–º—É–Ω–∏—Ç–µ—Ç–∞',
      'longevity': '–£–≤–µ–ª–∏—á–µ–Ω–∏–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∂–∏–∑–Ω–∏',
      'hormonal_balance': '–ì–æ—Ä–º–æ–Ω–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å',
      'digestive_health': '–ó–¥–æ—Ä–æ–≤—å–µ –ø–∏—â–µ–≤–∞—Ä–µ–Ω–∏—è',
      'skin_health': '–ó–¥–æ—Ä–æ–≤—å–µ –∫–æ–∂–∏',
      'metabolic_health': '–ú–µ—Ç–∞–±–æ–ª–∏—á–µ—Å–∫–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ',
      'bone_health': '–ó–¥–æ—Ä–æ–≤—å–µ –∫–æ—Å—Ç–µ–π',
      'mental_health': '–ü—Å–∏—Ö–∏—á–µ—Å–∫–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ',
      'detox': '–î–µ—Ç–æ–∫—Å–∏–∫–∞—Ü–∏—è –æ—Ä–≥–∞–Ω–∏–∑–º–∞',
      'athletic_performance': '–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã'
    };
    return translations[goal] || goal;
  };

  const handleGenerateAnalytics = async () => {
    console.log('üîÑ Manual analytics refresh triggered');
    await generateAnalytics();
  };

  if (isLoading) {
    return (
      <AppLayout>
        <div className="flex items-center justify-center min-h-[400px]">
          <div className="text-center">
            <div className="animate-spin h-8 w-8 border-b-2 border-blue-500 mx-auto mb-3"></div>
            <p className="text-gray-500">–ó–∞–≥—Ä—É–∑–∫–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏...</p>
          </div>
        </div>
      </AppLayout>
    );
  }

  // –ï—Å–ª–∏ –Ω–µ—Ç –ø—Ä–æ—Ñ–∏–ª—è –∑–¥–æ—Ä–æ–≤—å—è –∏–ª–∏ –∞–Ω–∞–ª–∏–∑–æ–≤
  if (!hasHealthProfile || !hasAnalyses) {
    return (
      <AppLayout>
        <div className="space-y-6">
          <div>
            <h1 className="text-2xl sm:text-3xl font-bold text-gray-900">–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞</h1>
            <p className="text-gray-600 mt-2">–í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∑–¥–æ—Ä–æ–≤—å—è</p>
          </div>

          <AnalyticsDisplayCard title="–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞" icon={AlertTriangle}>
            <div className="text-center py-6">
              <p className="text-gray-700 mb-6">
                –î–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ:
              </p>
              
              <div className="space-y-4 mb-6">
                <div className={`flex items-center gap-3 p-4 ${hasHealthProfile ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-600'}`}>
                  <User className="h-5 w-5 flex-shrink-0" />
                  <span>{hasHealthProfile ? '‚úì –ü—Ä–æ—Ñ–∏–ª—å –∑–¥–æ—Ä–æ–≤—å—è —Å–æ–∑–¥–∞–Ω' : '–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –∑–¥–æ—Ä–æ–≤—å—è'}</span>
                </div>
                <div className={`flex items-center gap-3 p-4 ${hasAnalyses ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-600'}`}>
                  <TestTube className="h-5 w-5 flex-shrink-0" />
                  <span>{hasAnalyses ? '‚úì –ê–Ω–∞–ª–∏–∑—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã' : '–ó–∞–≥—Ä—É–∑–∏—Ç—å –∞–Ω–∞–ª–∏–∑—ã –∫—Ä–æ–≤–∏'}</span>
                </div>
              </div>

              <div className="flex flex-col sm:flex-row gap-3 justify-center">
                {!hasHealthProfile && (
                  <Button 
                    onClick={() => window.location.href = '/health-profile'}
                    className="min-h-[44px]"
                  >
                    –°–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å
                  </Button>
                )}
                {!hasAnalyses && (
                  <Button 
                    onClick={() => window.location.href = '/lab-analyses'}
                    variant={hasHealthProfile ? "default" : "outline"}
                    className="min-h-[44px]"
                  >
                    –ó–∞–≥—Ä—É–∑–∏—Ç—å –∞–Ω–∞–ª–∏–∑—ã
                  </Button>
                )}
              </div>
            </div>
          </AnalyticsDisplayCard>
        </div>
      </AppLayout>
    );
  }

  // –ï—Å–ª–∏ –Ω–µ—Ç –∞–Ω–∞–ª–∏—Ç–∏–∫–∏, –Ω–æ –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ
  if (!analytics) {
    return (
      <AppLayout>
        <div className="space-y-6">
          <div>
            <h1 className="text-2xl sm:text-3xl font-bold text-gray-900">–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞</h1>
            <p className="text-gray-600 mt-2">–í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∑–¥–æ—Ä–æ–≤—å—è</p>
          </div>

          <AnalyticsDisplayCard title="–ì–æ—Ç–æ–≤ –∫ –∞–Ω–∞–ª–∏–∑—É" icon={RefreshCw}>
            <div className="text-center py-6">
              <p className="text-gray-700 mb-6">
                –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –≥–æ—Ç–æ–≤—ã –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –ò–ò-–¥–æ–∫—Ç–æ—Ä–æ–º
              </p>
              <Button 
                onClick={handleGenerateAnalytics}
                disabled={isGenerating}
                size="lg"
                className="min-h-[44px]"
              >
                {isGenerating ? (
                  <>
                    <RefreshCw className="h-4 w-4 mr-2 animate-spin" />
                    –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º...
                  </>
                ) : (
                  '–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏'
                )}
              </Button>
            </div>
          </AnalyticsDisplayCard>
        </div>
      </AppLayout>
    );
  }

  // –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏
  return (
    <AppLayout>
      <div className="container mx-auto px-4 py-4 max-w-6xl">
        <div className="space-y-4">
          {/* Header */}
          <div className="flex flex-col gap-2">
            <div>
              <h1 className="text-lg font-bold text-gray-900">–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞</h1>
              <p className="text-sm text-gray-600">–í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∑–¥–æ—Ä–æ–≤—å—è</p>
            </div>
            <div className="flex flex-col sm:flex-row gap-2 w-full">
              <Link to="/my-recommendations">
                <Button variant="outline" size="sm" className="h-8 w-full sm:w-auto text-xs">
                  <Calendar className="h-3 w-3 mr-1" />
                  {isMobile ? '–ú–æ–∏' : '–ú–æ–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏'}
                </Button>
              </Link>
              <Button
                onClick={handleGenerateAnalytics}
                disabled={isGenerating}
                variant="outline"
                size="sm"
                className="h-8 w-full sm:w-auto text-xs"
              >
                <RefreshCw className={`h-3 w-3 mr-1 ${isGenerating ? 'animate-spin' : ''}`} />
                –û–±–Ω–æ–≤–∏—Ç—å
              </Button>
            </div>
          </div>

          <div className="grid grid-cols-1 lg:grid-cols-3 gap-4">
            {/* Main Content - Left 2/3 */}
            <div className="lg:col-span-2 space-y-4">
              {/* Health Goals Section */}
              {healthProfile?.healthGoals && healthProfile.healthGoals.length > 0 && (
                <div className="bg-white p-3 border">
                  <div className="flex items-center gap-2 mb-2">
                    <Target className="h-4 w-4" />
                    <h3 className="text-sm font-medium text-gray-900">–ú–æ–∏ —Ü–µ–ª–∏</h3>
                  </div>
                  <div className="space-y-1">
                    {healthProfile.healthGoals.slice(0, 3).map((goal, index) => (
                      <div key={index} className="flex items-center gap-2">
                        <div className="w-1.5 h-1.5 bg-purple-500 flex-shrink-0"></div>
                        <span className="text-xs text-gray-700">
                          {translateGoal(goal)}
                        </span>
                      </div>
                    ))}
                  </div>
                </div>
              )}

              {/* Personal AI Consultant - Main Content */}
              <div className="bg-white border">
                <div className="p-3 border-b">
                  <div className="flex items-center justify-between">
                    <div className="flex items-center gap-2">
                      <Brain className="h-4 w-4 text-blue-500" />
                      <h3 className="text-sm font-medium">–ò–ò-–ö–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –ø–æ –∑–¥–æ—Ä–æ–≤—å—é</h3>
                    </div>
                    <Button
                      onClick={handleGenerateAnalytics}
                      disabled={isGenerating}
                      variant="outline"
                      size="sm"
                      className="h-6 text-xs"
                    >
                      <RefreshCw className="h-3 w-3 mr-1" />
                      –û–±–Ω–æ–≤–∏—Ç—å
                    </Button>
                  </div>
                </div>
                <div className="p-3">
                  <PersonalAIConsultant 
                    analytics={analytics} 
                    healthProfile={healthProfile}
                  />
                </div>
              </div>

              {/* Biomarkers Analysis */}
              <AnalyticsBiomarkersCard analytics={analytics} />
            </div>

            {/* Right Sidebar - 1/3 */}
            <div className="space-y-4">
              {/* Health Index */}
              <AnalyticsScoreCard
                healthScore={analytics.healthScore}
                riskLevel={analytics.riskLevel}
                lastUpdated={analytics.lastUpdated}
              />

              {/* Health Profile Summary */}
              {healthProfile && (
                <div className="bg-white p-3 border">
                  <div className="flex items-center gap-2 mb-3">
                    <User className="h-4 w-4" />
                    <h3 className="text-sm font-medium">–ü—Ä–æ—Ñ–∏–ª—å –∑–¥–æ—Ä–æ–≤—å—è</h3>
                  </div>
                  <div className="space-y-2">
                    <div className="flex justify-between">
                      <span className="text-xs text-gray-600">–í–æ–∑—Ä–∞—Å—Ç</span>
                      <span className="text-xs font-medium">{healthProfile.age} –ª–µ—Ç</span>
                    </div>
                    <div className="flex justify-between">
                      <span className="text-xs text-gray-600">–ò–ú–¢</span>
                      <span className="text-xs font-medium">{((healthProfile.weight / Math.pow(healthProfile.height / 100, 2)).toFixed(1))}</span>
                    </div>
                    <div className="flex justify-between">
                      <span className="text-xs text-gray-600">–ß–∞—Å—ã —Å–Ω–∞</span>
                      <span className="text-xs font-medium">{healthProfile.sleepHours} —á–∞—Å–æ–≤</span>
                    </div>
                    <div className="flex justify-between">
                      <span className="text-xs text-gray-600">–°—Ç—Ä–µ—Å—Å</span>
                      <span className="text-xs font-medium">{healthProfile.stressLevel}/10</span>
                    </div>
                    <div className="flex justify-between">
                      <span className="text-xs text-gray-600">–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</span>
                      <span className="text-xs font-medium">{healthProfile.exerciseFrequency} —Ä–∞–∑/–Ω–µ–¥</span>
                    </div>
                    <div className="flex justify-between">
                      <span className="text-xs text-gray-600">–í–æ–¥–∞</span>
                      <span className="text-xs font-medium">{healthProfile.waterIntake} —Å—Ç</span>
                    </div>
                  </div>
                </div>
              )}
            </div>
          </div>
        </div>
      </div>
    </AppLayout>
  );
};

export default Analytics;
